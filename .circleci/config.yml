version: 2.1

orb-tools: circleci/orb-tools@8.13.1

jobs:
  test:
    executor:
      name: orb-tools/machine
      dlc: true
    steps:
      - checkout

      - run:
          name: Make sure Dockerfile builds
          command: |
            docker build -t "circleciimages/base:$CIRCLE_SHA1" ubuntu
            docker build -t "circleciimages/base:$CIRCLE_SHA1-node" variant-node

  publish-edge:
    executor:
      name: orb-tools/machine
      dlc: true
    steps:
      - checkout

      - run:
          name: Build Docker images
          command: |
            docker build -t "circleciimages/base:$CIRCLE_SHA1" ubuntu
            docker build -t "circleciimages/base:$CIRCLE_SHA1-node" ubuntu

      - run:
          name: Prepare and publish image
          command: |
            docker tag "circleciimages/base:$CIRCLE_SHA1" circleciimages/base:edge
            docker tag "circleciimages/base:$CIRCLE_SHA1-node" circleciimages/base:edge-node

            echo "$DOCKER_PASS" | docker login --username "$DOCKER_USER" --password-stdin

            docker push circleciimages/base:edge
            docker push circleciimages/base:edge-node

  publish-monthly:
    executor:
      name: orb-tools/machine
      dlc: true
    steps:
      - checkout

      - run:
          name: Build Docker images
          command: |
            docker build --pull -t "cibuilds/base:$CIRCLE_SHA1" ubuntu
            docker build --pull -t "cibuilds/base:$CIRCLE_SHA1-node" variant-node

      - run:
          name: Prepare and publish images
          command: |
            VERSION=$( date +%Y.%m )
            docker tag "circleciimages/base:$CIRCLE_SHA1" "circleciimages/base:${VERSION}"
            docker tag "circleciimages/base:$CIRCLE_SHA1-node" "circleciimages/base:${VERSION}-node"

            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin

            docker push "circleciimages/base:${VERSION}"
            docker push "circleciimages/base:${VERSION}-node"

workflows:
  monthly-release:
    triggers:
      - schedule:
          cron: "0 0 2 * *"
          filters:
            branches:
              only: master
    jobs:
      - test
      - publish-monthly:
          context: org-global
          requires:
            - test
          filters:
            branches:
              only: master

  main:
    jobs:
      - test
      - publish-edge:
          context: org-global
          requires:
            - test
          filters:
            branches:
              only: master
